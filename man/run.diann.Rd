% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run.diann.R
\name{run.diann}
\alias{run.diann}
\title{Run DIA-NN from R}
\usage{
run.diann(
  files,
  output.folder,
  reannotate = TRUE,
  unrelated.runs = FALSE,
  MBR = TRUE,
  peptide.length.range = c(5, 30),
  precursor.charge.range = c(1, 4),
  precursor.mz.range = c(300, 1800),
  fragment.ion.mz.range = c(200, 1800),
  precursor.FDR = 0.01,
  diann.path = "diann.exe",
  lib = "D:/DIA_helpfiles/library.tsv",
  fasta = "D:/DIA_helpfiles/Pf3D7_v63_HsUniprot241009_iRT_contam_decoy_formatted.fasta",
  threads = 8
)
}
\arguments{
\item{files}{Character vector of full paths to \code{.mzML} files.}

\item{output.folder}{Directory where DIA-NN output (e.g., \code{report.parquet}) will be saved.}

\item{reannotate}{Logical. If \code{TRUE}, enables reannotation of the library.}

\item{unrelated.runs}{Logical. If \code{TRUE}, treats runs as unrelated for analysis.}

\item{MBR}{Logical. If \code{TRUE}, enables match-between-runs (MBR).}

\item{peptide.length.range}{Integer vector of length 2 specifying min and max peptide length.}

\item{precursor.charge.range}{Integer vector of length 2 specifying allowed precursor charge range.}

\item{precursor.mz.range}{Numeric vector of length 2 specifying m/z range for precursor ions.}

\item{fragment.ion.mz.range}{Numeric vector of length 2 specifying m/z range for fragment ions.}

\item{precursor.FDR}{Numeric. FDR threshold for precursor quantification (default 0.01).}

\item{diann.path}{Path to the \code{diann.exe} binary (default \code{"diann.exe"} assumes it's in the system PATH).}

\item{lib}{Path to the spectral library \code{.tsv} file.}

\item{fasta}{Path to the FASTA file used for identification and inference.}

\item{threads}{Integer. Number of CPU threads to use (default is 8).}
}
\value{
Returns the system exit code from the DIA-NN command.
}
\description{
Executes DIA-NN on one or more \code{.mzML} files using system calls.
}
\examples{
\dontrun{
run_diann(
  files = list.files("DIA_data", pattern = "\\\\.mzML$", full.names = TRUE),
  output.folder = "DIA_results",
  lib = "library.tsv",
  fasta = "fastafile.fasta",
  threads = 8
)
}
}
